# Site
name: Gimo Song
title: Software Developer

#repository: Git repository where your resume will be hosted, only required if you are hosting on GitHub (eg. sproogen/modern-resume-theme)
# favicon: Directory of your favicon (eg. images/favicon.ico)(optional)

# Content configuration version
version: 2

#name: Gimo Song
#title: Software Developer
#email: goodmoskito@gmail.com

# Dark Mode (true/false/never)
darkmode: false

# Social links
#github_username:  songgimo
#linkedin_username: gimosong

about_profile_image: images/gm.jpg


about_title: Hello.

about_content: |
  ## 반갑습니다.
  ## 저는 5년차, 목적으로 향하는 개발자 송기모입니다.
  <br>
  <div class="custom-title">Contact&Channel.</div>
  Email. goodmoskito@gmail.com <br>
  Github. <a class="no-under" href="https://github.com/songgimo" target="_blank"> https://github.com/songgimo </a>

content:
  - title: Introduce.
    layout: text
    content: | # this will include new lines to allow paragraphs      
      웹/백엔드 서비스 개발 및 스타트업 개발자로서 다양한 경험을 가지고 있습니다.
      Python, Django, HTML, SCSS, jQuery, MariaDB, Git, Linux 등을 사용하며, 목적에 따른 아키텍처를 개발하고자 언제나 고민하고 있습니다.
      
      또한 스스로 부족한 역량을 쌓고자 항상 고민하고 있으며, 이전에 개발한 프로젝트를 리팩토링하거나 개발에 대한 간략한 생각을 작성하여 새로운 인사이트를 얻으며 부족한 역량을 쌓기 위해 노력하고 있습니다.
      
      프로젝트 개발이란 제품 팀이 공통된 목적을 달성하기 위해 함께 나아가는 것이라고 생각하며, 그렇기에 효율적인 커뮤니케이션이 중요하다고 믿고 행동합니다.
      이러한 신념을 기반으로 회사가 성장하는 과정에서 다양한 상황을 학습하고 경험하였습니다. 지금도 끊임없이 발전하며, 더 나은 개발자가 되기 위해 노력하고 있습니다.

  - title: Skill.
    layout: text
    content: | # this will include new lines to allow paragraphs
      <ul class="highlights">
        <li>Frontend: JavaScript, jQuery, Next.JS, HTML/CSS, SCSS</li>
        <li>Backend: Python, Django, Flask</li>
        <li>Database: MySQL, MariaDB, Redis</li>
        <li>Deployment: AWS(EC2/OpenSearch/S3), Vercel, Docker</li>
        <li>Communication: Trello, Zeplin, Slack</li>
        <li>Version Control: Git, Github, Bitbucket</li>
      </ul>

  - title: Work Experience.
    layout: list
    content:
      - layout: left
        title: 위시켓
        caption: 2019.02 - 2023.03
        description: | # this will include new lines to allow paragraphs Description of role
          <div class="custom-title">Description.</div>
          IT 아웃소싱 플랫폼 기업인 <a href="https://wishket.com" target="_blank">위시켓</a>에서 
          스토어/평가/스마트매칭 도메인 부문을 리딩하며, 해당 분야에서 설계, 개발, 배포, 운영을 담당하고 있습니다.
          
          애자일 방법론을 일부 채용하여 기획&디자인 팀과 수시로 커뮤니케이션하여 목적에 맞는 제품 개발을 진행했으며,
          프로젝트는 Python, Django, HTML, SCSS, jQuery, MariaDB를 주로 사용하였고 필요에 따라서 데이터 마이그레이션도 진행하였습니다.
          
          <div class="custom-title">Footprint.</div>
          <b>위시켓 서비스의 전반적인 관리 및 기능 개발/개선</b>
          - 매칭 데이터 수집을 위한 스마트매칭 MTV 설계/개발.
          - 프로젝트-스마트매칭 데이터 일치율 계산 및 추천 메일 발송하는 매칭 알고리즘 설계/개발.
          - 공개와 비공개 평가, 하자보수 평가 세분화와 유저 판단 근거 확보를 위한 평가 도메인 MTV 재설계/개발
          - ELB도입으로 다중 서버 배포 자동화 및 마이그레이션 시스템 개발
          - 요즘IT 검색 알고리즘을 OpenSearch&DSL쿼리로 설계/개발. 유사 점수에 따른 정렬과 유사 키워드 검색, 정확도 개선
          - 평가 관리 어드민을 NextJS로 컨버팅하여 평가 관리 최적화
          - 슬랙봇 구독 신청 MTV 설계/개발. 구독 서비스를 Webhook, Restful을 사용하여 설계 및 개발. 550개의 구독 채널 확보 및 플랫폼 유입 유도
          - Docker 플랫폼을 이용한 데이터 세팅, 테스트 최적화
          - Python 2.7 -> 3.5, django 1.8 -> 3.2.11로 포팅을 일부 담당. 코드 안정성 개선
          - 제품 목적에 따른 DB 마이그레이션, 레거시 데이터 처리를 위한 마이그레이션 코드 작성/배포
          - Git 형상관리, Github Action과 YML 파일을 이용한 배포 자동화
          
          <b>개발 업무 외 기타 담당</b>
          - KT Cloud -> AWS 이전을 위한 서버 이전 업체 선정 보조, 컨텍 담당
          - 위시켓 스토어 입점업체 미디버스의 개발 지원, 컨텍 담당
          - 개발자 채용과 면접 담당 (서류 평가, 코딩 테스트, 실무 면접)
          - 동료 개발자 코드 리뷰 등
          
          <div class="custom-title">Tech Stack.</div>
          <mark>Python</mark>
          <mark>Django</mark>
          <mark>Docker</mark>
          <mark>Redis</mark>
          <mark>MariaDB</mark>
          <mark>OpenSearch</mark>
          <mark>EC2</mark>
          <mark>jQuery</mark>
          <mark>NextJS</mark>
          <mark>Restful</mark>
#          Python, Django, Docker, Redis, MariaDB, OpenSearch, EC2, nextJS, jQuery, HTML/CSS

  - title: Other Experience.
    layout: list
    content:
      - layout: left
        title: 프리랜서 활동
        caption: 2017.02 - 2019.01
        description: | # 
          <div class="custom-title">Description.</div>
          크몽에서 사이버 사령부 동기와 함께 팀 단위 프리랜서 활동을 했으며 설계/개발을 담당하였습니다.
          대부분 주식과 암호화폐 트레이딩 프로그램을 개발하였으며, Thread, Async, Process, Queue, Lock 등 다양한 자료구조와 OS를 활용하여 개발하였습니다.
          <div class="custom-title">Footprint.</div>
          - 바이낸스 거래소, Qt GUI, Restful, Thread, Queue, Signal을 사용한 현물과 마진 이동, 밸런스 정보, 마진 트레이딩 등 종합 대시보드 시스템 개발
          - 코빗 거래소, SQLite, Restful을 사용한 암호화폐 데이 트레이딩 시스템 개발
          - 업비트 거래소, Qt GUI, Restful, Thread, Queue를 사용한 그리드 트레이딩 시스템 개발
          - 키움증권, Qt Graph, Win32, OpenAPI, Process, Thread, Queue, Signal을 사용한 <a href="https://github.com/songgimo/gimo-freelance/tree/main/KiwoomHighChart" target="_blank">주식 차트 프로그램</a> 개발
          - 키움증권, Qt, Win32, OpenAPI, Thread, Queue, Signal을 사용한 그리드 트레이딩 시스템 개발
          
          <div class="custom-title">Tech Stack.</div>
          <mark>Python</mark>
          <mark>MySQL</mark>
          <mark>Async</mark>
          <mark>Queue</mark>
          <mark>Lock</mark>
          <mark>Thread</mark>
          <mark>Restful</mark>
          <mark>Qt</mark>
          <mark>Selenium</mark>
#          Python, MySQL, Async, Queue, Lock, Thread, Restful

      - layout: left
        title: 팀 프로젝트 활동
        caption: 2017.02 - 2019.01
        description: | # 
          <div class="custom-title">Description.</div>
          팀 프로젝트 활동은 사이버 사령부 동기와 함께 시작되어서 트레이딩 프로그램을 개발해보자는 목표로 진행되었습니다.
          이 활동에서 암호화폐
          <a href="https://github.com/songsb13/Exchanges" target="_blank">API모듈</a>과
          <a href="https://github.com/songsb13/DiffTrader" target="_blank">재정거래</a>, 
          <a href="https://github.com/songgimo/AlgoTrader" target="_blank">지표거래</a> 프로그램을 개발하고 운영하였습니다. 프로젝트의 아이디어와 일부 함수 설계는 동기가 담당하였으며, 그 외의 설계와 개발은 제가 담당하였습니다.
          <div class="custom-title">Footprint.</div>
          - 업비트, 빗썸, 바이낸스 거래소에 대해 Restful, WebSocket을 이용한 통신 모듈 작성
          - <a href="https://github.com/songgimo/gimo-freelance/tree/main/StockApis" target="_blank">키움증권, 신한i</a>에 대해 OpenAPI, Qt와 Thread, Queue, Signal을 이용한 통신 모듈 작성
          - 암호화폐 재정거래 시스템 개발, Thread, Process, Redis를 사용하여 Slippage 최소화
          - 유저 거래 데이터 관리를 위해 Flask, MySQL을 이용한 서버/클라이언트 개발 및 운영
          - MACD, CCI, RSI, Stochastic 지표를 계산하는 함수와 이를 Tree 구조로 변경하는 함수를 만들어 지표거래 프로그램 개발에 일조
          
          <div class="custom-title">Tech Stack.</div>
          <mark>Python</mark>
          <mark>MySQL</mark>
          <mark>Flask</mark>
          <mark>Redis</mark>
          <mark>Async</mark>
          <mark>Thread</mark>
          <mark>Process</mark>
#          Python, MySQL, Flask, Redis, Async, Thread, Process

      - layout: left
        title: 사이버사령부
        caption: 2015.07 - 2017.02
        description: | #
          <div class="custom-title">Description.</div>
          대한민국 국직부대 사이버사령부에서 정보보호병으로 근무했으며 국방망 서버 및 네트워크 관리, 필요에 따라 스크립트 작성을 하였습니다.
          <div class="custom-title">Footprint.</div>
          - CentOS, Ubuntu 등의 국방망 서버, 네트워크 관리 및 운영
          
          <div class="custom-title">Tech Stack.</div>
          <mark>Python</mark>
          <mark>Linux</mark>
#          Python, Linux

  - title: Project Detail.
    layout: list
    content:
      - layout: left
        title: 평가 도메인 개선
        caption: 2022.12 - 2023.02
        description: |
          <div class="custom-title">Description.</div>
          위시켓에서 상주 프로젝트의 비중이 늘어남에 따라 외주/상주에 대한 평가 분리가 필요하다는 문제에서 시작한 프로젝트입니다.
          뷰와 템플릿을 수정했으며 공개와 비공개 평가에 대한 관계 설정을 재정립하고 레거시에 대한 마이그레이션 코드를 작성하였습니다.
          <div class="custom-title">Footprint.</div>
          - 공개, 비공개 평가의 수직적 관계에서 수평적 관계로의 관계 재정립, 관련된 레거시 마이그레이션 진행
          - 새로운 평가의 MTV 개발/수정
          - 평가 모델 재정립으로 파생되는 모든 서비스 수정 및 개선
          <div class="custom-title">Tech Stack.</div>
          <mark>Python</mark>
          <mark>Django</mark>
          <mark>Celery</mark>
          <mark>Redis</mark>
          <mark>ChartJS</mark>
          <mark>jQuery</mark>

      - layout: left
        title: 요즘IT 검색 알고리즘 설계 및 개발
        caption: 2022.08 - 2022.10
        description: |
          <div class="custom-title">Description.</div>
          Django ORM 기반의 요즘IT 검색 기능 개선이 필요하다는 문제에서 시작한 프로젝트입니다.
          AWS OpenSearch로 서버를 구축하고 DSL과 백엔드 로직을 결합해 검색어 연관에 따른 정렬과 정확도, 유사한 키워드에 대한 통합 검색을 지원하는 알고리즘을 개발하였습니다.
          <div class="custom-title">Footprint.</div>
          - 기존 Django ORM 기반에서 OpenSearch, DSL과 결합해서 검색하도록 수정
          - OpenSearch 고유 기능으로 일치율이 높은 결과 값이 우선 노출되도록 변경
          - Django ORM & DSL을 사용해 유사한 키워드에 대한 통합 검색 지원 알고리즘 개발
          - space와 comma(,)로 검색어를 조합할 수 있는 기능 개발
          <div class="custom-title">Tech Stack.</div>
          <mark>Python</mark>
          <mark>Django</mark>
          <mark>Restful</mark>
          <mark>Redis</mark>
          <mark>Celery</mark>
          <mark>OpenSearch</mark>

      - layout: left
        title: 요즘IT 슬랙봇 구독 서비스 설계 및 개발
        caption: 2022.07 - 2022.08
        description: |
          <div class="custom-title">Description.</div>
          요즘IT 플랫폼으로 유저를 유입시키고 관련 컨텐츠의 조회 수를 늘리기 위해 시작한 프로젝트입니다.
          Webhook과 API를 사용해 슬랙봇 서비스를 연동하였으며, Redis와 Celery로 비동기적으로 구독된 채널에 컨텐츠를 발송하도록 개발하였습니다.
          <div class="custom-title">Footprint.</div>
          - 슬랙봇 구독 신청 MTV 설계/개발
          - 슬랙봇 Webhook, API 연동하여 구독 채널과 통신 및 컨텐츠 발송
          - Redis, Celery, Thread를 사용해 구독 서비스에 대해 병렬적으로 컨텐츠가 발송될 수 있도록 개발
          - 시스템 구축 후 약 550개의 구독 채널을 확보하고 컨텐츠를 발송하며 유저의 플랫폼 유입 유도
          <div class="custom-title">Tech Stack.</div>
          <mark>Restful</mark>
          <mark>Redis</mark>
          <mark>Thread</mark>
          <mark>Python</mark>
          <mark>Django</mark>

      - layout: left
        title: 매칭 알고리즘 개발
        caption: 2021.08 - 2021.10
        description: |
          <div class="custom-title">Description.</div>
          전일 등록된 프로젝트와 파트너가 입력한 개인 데이터를 기반으로 데이터를 매칭하고 메일을 발송하는 알고리즘을 설계/개발하였습니다.
          매일 13,000건의 프로젝트 추천 메일이 발송되며 유저들에게 지원을 유도하고 있습니다.
          <div class="custom-title">Footprint.</div>
          - 파트너 개인 데이터와 등록 프로젝트의 유사성을 비교하고, 요구 일치율에 도달하면 메일링해주는 알고리즘 설계/개발
          - Redis, Celery로 스케줄링하고 메일 17시에 발송, 지원 유도
          <div class="custom-title">Tech Stack.</div>
          <mark>Celery</mark>
          <mark>Redis</mark>
          <mark>Restful</mark>
          <mark>Python</mark>
          <mark>Django</mark>

      - layout: left
        title: 스마트매칭 도메인 설계 및 개발
        caption: 2020.10 - 2020.12
        description: |
          <div class="custom-title">Description.</div>
          파트너가 원하는 프로젝트에 대한 데이터 정립이 필요하다는 문제에서 시작한 프로젝트입니다.
          개인 데이터를 입력할 수 있는 MTV를 설계/개발하여 매칭 데이터를 저장하고, 저장된 데이터는 시스템 메일, 콜드 메일 발송에 사용되고 있습니다.
          <div class="custom-title">Footprint.</div>
          - 스마트매칭 DB와 뷰, 페이지 개발하여 약 53,000건의 매칭 데이터를 확보함.
          - 마이위시켓 랜딩, 지원/흥미 프로젝트 자동입력 등의 추가 이터레이션 개발
          <div class="custom-title">Tech Stack.</div>
          <mark>Python</mark>
          <mark>Django</mark>
          <mark>jQuery</mark>
          <mark>MariaDB</mark>

      - layout: left
        title: 평가 도메인 재설계 및 개발
        caption: 2020.06 - 2020.10
        description: |
          <div class="custom-title">Description.</div>
          기존 평가에 대해 유저가 정확한 평가를 하지 않는다는 문제와 평가 작성률이 낮다는 문제에서 시작한 프로젝트입니다.
          기존에 있는 평가 MTV를 완전히 재설계했으며, 비공개 평가를 추가해 유저 판단 근거를 늘리고, 작성 기한 제한과 남은 기한에 따른 작성 유도 프로세스 등을 개발하였습니다.
          <div class="custom-title">Footprint.</div>
          - 평가 항목을 공개-비공개 평가, 하자보수 평가로 확장하여 평가를 세분화하고 정형화 데이터를 받을 수 있는 뷰와 모델을 설계 및 개발
          - 유저 수와 평가 개수가 늘어남에 따른 평가 필터 모듈을 개발
          - 평가 상태와 남은 기한에 따른 알림 시스템을 개발
          - 평가 기한이 없고, 비공개 평가가 없는 것을 전제로 한 레거시를 제거하고 데이터에 대한 마이그레이션
          - 30개월간 공개 평가 3,000건, 비공개 평가 2,700건 확보
          <div class="custom-title">Tech Stack.</div>
          <mark>Celery</mark>
          <mark>Redis</mark>
          <mark>Python</mark>
          <mark>jQuery</mark>
          <mark>MariaDB</mark>
      - layout: left
        title: 위시켓 개발팀 DevOps
        caption: 2019.02 - 2023.03
        description: |
          <div class="custom-title">Description.</div>
          위시켓 개발팀에서 요구하는 DevOps에 대한 시스템을 구현하고, 때에 따라 데이터 마이그레이션을 진행하였습니다.
          <div class="custom-title">Footprint.</div>
          - Github Action, YML 문법을 사용한 로컬-스테이징 배포 자동화
          - ELB도입으로 다중 서버 배포 시스템을 개발
          - Node.JS로 Azure -> S3 데이터 마이그레이션 스크립트 개발
          - Python 2.7 -> 3.5, django 1.8 -> 3.2.11로 포팅을 일부 담당하여 코드 안정성 개선
          <div class="custom-title">Tech Stack.</div>
          <mark>S3</mark>
          <mark>Github Action</mark>
          <mark>Docker</mark>
          <mark>Node.js</mark>

      - layout: left
        title: 위시켓 내부 시스템 개선
        caption: 2019.02 - 2023.03
        description: |
          <div class="custom-title">Description.</div>
          위시켓 내부 프로세스 자동화와 어드민 기능을 추가/개선 및 배포와 운영을 하였습니다.
          <div class="custom-title">Footprint.</div>
          - 밴 유저 관리 어드민 설계/개발하여 로그 기록, 메일 발송, 유저 상태 관리 등 자동화로 CM, RM팀의 업무 효율성 개선
          - NextJS로 평가 상태 관리 대시보드 개발하여 평가 관련 업무를 통합하고 자동화하여 CS팀의 업무 효율성 개선
          - 평가 어드민 설계/개발로 평가를 일괄하고 자동화해 CS팀의 업무 효율성을 개선
          <div class="custom-title">Tech Stack.</div>
          <mark>NextJS</mark>
          <mark>Django</mark>
          <mark>Restful</mark>
          <mark>Python</mark>


  - title: Other Project. # Title for the section
    layout: list # Type of content section (list/text)
    content:
        - layout: left
          title: 암호화폐 재정거래 프로그램 개선
          caption: 2022.02 - 2022.08
          description: | # this will include new lines to allow paragraphs
            <div class="custom-title">Description.</div>
            이전 프로젝트인 암호화폐 재정거래 코드가 지나치게 복잡하고, Thread 형태로 처리되어 각 시퀀스들이 서로 종속적이라는 문제를 개선하고자 개인적으로 리팩토링 작업을 진행하였습니다.
            기존 Qt 기반의 GUI를 CLI 방식으로 변경하고, Process와 Redis를 사용해 각 시퀀스간 종속성을 제거하고 코드의 복잡성을 풀어냈습니다.
            <div class="custom-title">Footprint.</div>
            - Qt GUI -> CLI 형태로 수정하여 코드 복잡성 개선
            - Thread, Queue 기반에서 Process, Redis로 변경하여 프로세스별 코드 종속성 제거
            - Redis, set/get, pub/sub 도입하여 프로세스 간 데이터 통신
            - 모호한 Depth를 가지는 파일과 코드를 통합/분리
            <div class="custom-title">Tech Stack.</div>
            <mark>Python</mark>
            <mark>Redis</mark>
            <mark>Process</mark>
            <mark>Thread</mark>
            <mark>Restful</mark>
            <mark>WebSocket</mark>

        - layout: left
          title: 암호화폐 거래소 API 개선
          sub_title: Software Developer
          caption: 2022.02 - 2022.08
          description: | # this will include new lines to allow paragraphs
            <div class="custom-title">Description.</div>
            이전 프로젝트인 암호화폐 거래소 API의 <a href="https://velog.io/@reversemq/tradeoff" target="_blank">문제점이라 생각한 부분인</a> 
            불필요한 Subscriber 방식과 과도한 분리로 인한 탐색비용 증가 등의 문제를 개선하고자 개인적으로 리팩토링 작업을 진행하였습니다.
            <div class="custom-title">Footprint.</div>
            - Upbit, Binance, Bithumb API 간 파일 병합, 모호한 기능 분리 및 개선
            - 더 적합한 API로의 기능 개선 및 수정
            <div class="custom-title">Tech Stack.</div>
            <mark>Python</mark>
            <mark>Async</mark>
            <mark>Queue</mark>
            <mark>Restful</mark>
            <mark>WebSocket</mark>

        - layout: left
          title: 증권사 API 연동
          caption: 2018.11 - 2019.01
          description: |
            <div class="custom-title">Description.</div>
            외주를 하며 작성되던 키움증권과 신한i에 대한 API를 모듈화하고 통합하였습니다.
            <div class="custom-title">Footprint.</div>
            - 신한i에 대한 API 모듈 작성
            - 키움증권에 대한 API 모듈 작성
            <div class="custom-title">Tech Stack.</div>
            <mark>Python</mark>
            <mark>Qt</mark>
            <mark>Queue</mark>
            <mark>Win32</mark>
            <mark>Thread</mark>

        - layout: left
          title: 암호화폐 지표 거래 시스템
          caption: 2018.10 - 2019.01
          description: |
            <div class="custom-title">Description.</div>
            각종 지표를 조합하고 비교해서 거래를 해보자는 제안에서 시작한 프로젝트입니다.
            지표를 Tree 구조로 형성하고 이후 DFS로 서칭하고 입력한 조건에 맞으면 거래를 시작하는 방식으로 개발되었습니다.
            <div class="custom-title">Footprint.</div>
            - RSI, MACD, Stochastic, CCI에 대한 지표 도출 함수를 개발
            - 지표 Tree 구조 형성, 입력된 지표 요구 값을 충족하는지에 대한 함수 개발
            - Qt로 지표를 조합할 수 있는 GUI Widget 개발
            <div class="custom-title">Tech Stack.</div>
            <mark>Python</mark>
            <mark>Qt</mark>
            <mark>Tree</mark>
            <mark>Queue</mark>

        - layout: left
          title: 암호화폐 재정거래 프로그램 개발
          caption: 2018.04 - 2018.09
          description: | # this will include new lines to allow paragraphs
            <div class="custom-title">Description.</div>
            국내외 암호화폐 거래소의 프리미엄을 통한 재정거래를 해보자는 의미에서 시작된 프로젝트입니다.
            비교할 두 거래소, 요구 차익률을 입력받고 시장을 지속해서 감시하며 조건을 충족하면 거래하는 방식으로 개발하였습니다.
            <div class="custom-title">Footprint.</div>
            - Qt로 현재 트레이딩 상태 로그, 입력 인풋 등 GUI Widget을 개발
            - 거래소 간 차익률을 도출하고 비교하는 함수 개발
            - 거래 이후 차익 발생과 관련된 데이터 값을 저장하는 Flask, MySQL기반의 서버/클라이언트 개발
            <div class="custom-title">Tech Stack.</div>
            <mark>Python</mark>
            <mark>Async</mark>
            <mark>Restful</mark>
            <mark>Qt</mark>
            <mark>Thread</mark>

        - layout: left
          title: 암호화폐 거래소 API 연동
          caption: 2018.01 - 2018.04
          description: | # this will include new lines to allow paragraphs
            <div class="custom-title">Description.</div>
            국내 거래소인 Bithumb과 Upbit, 국외거래소인 Binance에 대한 API 모듈을 작성하였습니다.
            <div class="custom-title">Footprint.</div>
            - Async, aiohttp, WebSocket을 포함한 Upbit/Binance/Bithumb에 대한 API 통신 모듈 개발
            <div class="custom-title">Tech Stack.</div>
            <mark>Python</mark>
            <mark>Async</mark>
            <mark>Queue</mark>
            <mark>Restful</mark>
            <mark>WebSocket</mark>

  - title: Certificate.
    layout: list
    content:
      - layout: left
        title: AWS
        caption: 2022.01.03
        description: |
          AWS Certified Solution Architect - Associate 자격증을 수료하였습니다.<br>
          Number: 6LGBN0FJPNR4Q73J
      - layout: left
        title: 정보처리산업기사
        caption: 2016.11.25
        description: |
          정보처리산업기사 자격증을 수료하였습니다.<br>
          Number: 16652006652N

  - title: Education.
    layout: list
    content:
      - layout: left
        title: 학점은행제
        caption: 2018.07 - 2019.02
        description: |
          3년제 졸업 후 학사 학위를 취득하고자 6개월 가량 학점은행제를 이용했고 컴퓨터 공학을 수료하였습니다.
      - layout: left
        title: 울산과학대학교
        caption: 2013.03 - 2018.02
        description: | # this will include new lines to allow paragraphs
          컴퓨터 정보학을 수료했으며 공업 전문학사 학위를 취득하였습니다.



# Footer
footer_show_references: false
#references_title: Goodmoskito@gmail.com

# Build settings
#theme: modern-resume-theme (Use this is you are hosting your resume yourself)
#remote_theme: sproogen/modern-resume-theme (Use this if you are hosting your resume on GitHub)

sass:
  sass_dir: _sass
  style: compressed

plugins:
 - jekyll-seo-tag

exclude : [
  "Gemfile",
  "Gemfile.lock",
  "node_modules",
  "vendor/bundle/",
  "vendor/cache/",
  "vendor/gems/",
  "vendor/ruby/",
  "lib/",
  "scripts/",
  "docker-compose.yml",
  ]
